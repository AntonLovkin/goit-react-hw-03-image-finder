{"version":3,"sources":["components/Searchbar.js","services/API.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","Component","searchQuery","currentPage","axios","get","then","response","data","hits","App","pictures","onChangeQuery","fetchPictures","API","prevState","prevProps","map","id","userImageURL","tags","src","alt","length","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAiCeA,E,4MA9BXC,MAAQ,CAAEC,MAAO,K,EAEjBC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAACH,MAAOE,EAAME,cAAcC,S,EAG9CC,aAAe,SAAAJ,GACXA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAE/B,EAAKG,SAAS,CAAEH,MAAO,M,4CAI3B,WACI,OACI,uBAAMS,SAAUC,KAAKJ,aAArB,UACI,uBACIK,KAAK,OACLN,MAAOK,KAAKX,MAAMC,MAClBY,SAAUF,KAAKT,eAEnB,wBAAQU,KAAK,SAAb,2B,GAxBQE,a,iBCST,EANO,SAAC,GAA2C,IAAD,IAAxCC,mBAAwC,MAA1B,GAA0B,MAAtBC,mBAAsB,MAAR,EAAQ,EAC7D,OAAOC,IAAMC,IAAN,UAHU,2BAGV,sDAAmEH,EAAnE,iBAAuFC,EAAvF,4BAJK,uCAMPG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,SCiEzBC,E,4MAnEbvB,MAAQ,CACNwB,SAAU,GACVR,YAAa,EACbD,YAAa,I,EAafU,cAAgB,SAAAxB,GACd,EAAKG,SAAS,CAAEW,YAAad,EAAOe,YAAa,EAAGQ,SAAU,M,EAGhEE,cAAgB,WAEd,MAAqC,EAAK1B,MAAlCgB,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,YAMrBY,EAJgB,CACdX,cACAD,gBAGCI,MAAK,SAAAK,GACJ,EAAKpB,UAAS,SAAAwB,GAAS,MAAK,CAC1BJ,SAAS,GAAD,mBAAMI,EAAUJ,UAAhB,YAA6BA,IACrCR,YAAaY,EAAUZ,YAAc,U,uDA1B7C,c,gCAIA,SAAmBa,EAAWD,GACxBA,EAAUb,cAAgBJ,KAAKX,MAAMe,aACvCJ,KAAKe,kB,oBAyBT,WACE,IAAQF,EAAab,KAAKX,MAAlBwB,SACR,OACE,gCACE,0CAEA,cAAC,EAAD,CAAWd,SAAUC,KAAKc,gBAE1B,6BACGD,EAASM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACZ,6BACE,qBAAKC,IAAKF,EAAcG,IAAKF,KADtBF,QAMZP,EAASY,OAAS,GACjB,wBAAQxB,KAAK,SAASyB,QAAS1B,KAAKe,cAApC,iC,GAvDQZ,aCOHwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.69f6ab89.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n    state = { query: ' '}\r\n    \r\n    handleChange = event => {\r\n        this.setState({query: event.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.query);\r\n\r\n        this.setState({ query: ''})\r\n        // console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Searchbar;","import axios from 'axios';\r\n\r\nconst API_KEY = '21271693-9f15050c6f3761d48e024dcb2';\r\n    const BASE_URL = 'https://pixabay.com/api/';\r\n\r\nconst fetchPictures = ({ searchQuery = '', currentPage = 1 }) => {\r\n    return axios.get(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`\r\n    )\r\n        .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchPictures };","import { Component } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar\";\nimport API from './services/API'\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    currentPage: 1,\n    searchQuery: ''\n  };\n\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures(); \n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({ searchQuery: query, currentPage: 1, pictures: [] });   \n  }\n\n  fetchPictures = () => {\n    \n    const { currentPage, searchQuery } = this.state;\n    \n    const options = {\n      currentPage,\n      searchQuery\n    }\n    API.fetchPictures(options)\n      .then(pictures => {  \n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...pictures],\n          currentPage: prevState.currentPage + 1,\n        }));\n      });\n  }\n\n  render() {\n    const { pictures } = this.state;\n    return (\n      <div>\n        <h1>Pictures</h1>\n\n        <Searchbar onSubmit={this.onChangeQuery}/>\n\n        <ul>\n          {pictures.map(({ id, userImageURL, tags }) => (\n            <li key={id}> \n              <img src={userImageURL} alt={tags}/>\n            </li>\n          ))}\n        </ul>\n        \n        {pictures.length > 0 && (\n          <button type=\"button\" onClick={this.fetchPictures}>Load more...</button>)}\n      </div>\n    )\n  }\n}\n\n  //     <Searchbar>\n  //       <ImageGallery>\n  //         <ImageGalleryItem>\n  //         <Loader>\n  //             <Button>\n  //               <Modal></Modal>\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}