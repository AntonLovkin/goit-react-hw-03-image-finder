{"version":3,"sources":["components/Loader.js","components/Searchbar.js","services/API.js","components/Modal.js","components/Button.js","components/ImageGalleryItem.js","components/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["SearchLoader","className","type","color","height","width","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","autoComplete","autoFocus","placeholder","onChange","Component","searchQuery","currentPage","largeImageURL","axios","get","then","response","data","hits","Modal","handleKeyDown","evt","code","onClose","handleBackdropClick","target","console","log","window","addEventListener","removeEventListener","onClick","children","Button","ImageGalleryItem","key","src","alt","ImageGallery","pictures","map","id","webformatURL","tags","handleItemClick","App","showModal","isLoading","toggleModal","onChangeQuery","fetchPictures","API","prevState","scrollWindow","catch","error","finally","url","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5dfd43b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst SearchLoader = () => {\r\n    return (\r\n        <div className='Loader'>\r\n            <Loader\r\n             type=\"ThreeDots\"\r\n             color=\"#3f51b5\"\r\n             height={100}\r\n            width={100} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchLoader;","import { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n    state = { query: ' '}\r\n    \r\n    handleChange = event => {\r\n        this.setState({query: event.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.query);\r\n\r\n        this.setState({ query: ''})\r\n        // console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <header className=\"Searchbar\">\r\n            <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                   <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleChange}\r\n                />\r\n                {/* <button type=\"submit\" className=\"SearchForm-button\">Search</button> */}\r\n            </form>\r\n          </header>\r\n        )\r\n    }\r\n                \r\n\r\n}\r\n\r\nexport default Searchbar;","import axios from 'axios';\r\n\r\nconst API_KEY = '21271693-9f15050c6f3761d48e024dcb2';\r\n    const BASE_URL = 'https://pixabay.com/api/';\r\n\r\nconst fetchPictures = ({ searchQuery = '', currentPage = 1, largeImageURL }) => {\r\n    return axios.get(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`\r\n    )\r\n        .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchPictures };","import { Component } from \"react\";\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        console.log(\"modal didmount\");\r\n        window.addEventListener('keydown', this.handleKeyDown \r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"modal willunmount\");\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = evt => {\r\n        if (evt.code === 'Escape') {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = evt => {\r\n        if (evt.currentTarget === evt.target) {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"Overlay \" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    {this.props.children}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\n const Button = ({onClick}) => {\r\n        return (\r\n            <button className=\"Button\" type=\"button\"\r\n                onClick={onClick}>\r\n                Load more...</button>)   \r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({key, src, alt, onClick}) => {\r\n    return (\r\n        <li key={key} className=\"ImageGalleryItem\">\r\n              <img className=\"ImageGalleryItem-image\"\r\n                src={src}\r\n                alt={alt}\r\n                onClick={onClick} />\r\n            </li>\r\n    )\r\n}\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport ImageGalleryItem from '../components/ImageGalleryItem'\r\n\r\nconst ImageGallery = ({pictures}) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n          {pictures.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n            <ImageGalleryItem\r\n              key={id}    \r\n              src={webformatURL}\r\n              alt={tags}\r\n              onClick={()=> {this.handleItemClick(largeImageURL, tags )}}/>            \r\n          ))}\r\n        </ul>    \r\n       \r\n    )\r\n}\r\n\r\nexport default ImageGallery;","import { Component } from \"react\";\nimport \"./App.css\";\nimport SearchLoader from './components/Loader';\nimport Searchbar from \"./components/Searchbar\";\nimport API from './services/API';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport ImageGallery from './components/ImageGallery';\n\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    currentPage: 1,\n    searchQuery: '',\n    showModal: false,\n    largeImageURL: '',\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures(); \n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({showModal} ) => ({\n      showModal: !showModal,\n    }))\n  }\n\n  onChangeQuery = query => {\n    this.setState({ searchQuery: query, currentPage: 1, pictures: [] });   \n  }\n\n  scrollWindow() {\n    window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth'\n    });\n  }\n  \n  fetchPictures = () => {\n    \n    const { currentPage, searchQuery, largeImageURL } = this.state;\n\n    this.setState({ isLoading: true });\n    \n    const options = {\n      currentPage,\n      searchQuery,\n      largeImageURL\n    }\n    API.fetchPictures(options)\n      .then(pictures => {  \n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...pictures],\n          currentPage: prevState.currentPage + 1,\n        }));\n        this.scrollWindow()\n      })\n    .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  handleItemClick = (url, alt) => {   \n    this.setState({\n      largeImageURL: url\n    })\n    this.toggleModal()\n  }\n\n  render() {\n    const { pictures, showModal, largeImageURL, isLoading } = this.state;\n    return (\n      <div className=\"App\">\n       \n        <Searchbar\n          onSubmit={this.onChangeQuery}\n        />\n         \n        <ImageGallery\n          pictures={pictures}\n        />\n\n        {isLoading && <SearchLoader/>}\n                 \n        {pictures.length > 0 && (\n          <Button onClick={this.fetchPictures}\n          />)}\n        \n        {showModal && (\n          <Modal onClose ={this.toggleModal}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>)}\n                \n      </div> \n    )\n  }\n}\n\n  //         <Loader>          \n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}